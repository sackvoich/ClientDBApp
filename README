# Orders Project

## Описание

Это простое веб-приложение Django для управления заказами. Оно позволяет просматривать список заказов, создавать новые заказы, просматривать детали заказа, редактировать и удалять существующие заказы. Приложение использует базу данных PostgreSQL и может быть запущено как локально, так и с использованием Docker.

## Содержание

- [Локальный запуск](#локальный-запуск)
  - [Предварительные требования](#предварительные-требования)
  - [Инструкция по запуску](#инструкция-по-запуску)
- [Запуск через Docker](#запуск-через-docker)
  - [Предварительные требования](#предварительные-требования-docker)
  - [Инструкция по запуску](#инструкция-по-запуску-docker)
- [Использование](#использование)
- [Вклад](#вклад)
- [Лицензия](#лицензия)

## Локальный запуск

### Предварительные требования

Перед запуском проекта локально убедитесь, что на вашем компьютере установлено следующее:

- **Python 3.9+**: Вы можете скачать Python с [официального сайта Python](https://www.python.org/downloads/).
- **pip**: Обычно устанавливается вместе с Python. Проверьте установку, выполнив в терминале `pip --version`.
- **virtualenv** (рекомендуется): Инструмент для создания изолированных виртуальных сред Python. Установите с помощью `pip install virtualenv`.
- **PostgreSQL**: База данных, используемая проектом. Установите PostgreSQL, следуя инструкциям для вашей операционной системы с [официального сайта PostgreSQL](https://www.postgresql.org/download/).

### Инструкция по запуску

1.  **Клонируйте репозиторий:**

    ```bash
    git clone [URL вашего репозитория]
    cd orders_project
    ```

2.  **Создайте и активируйте виртуальное окружение (рекомендуется):**

    ```bash
    virtualenv venv
    source venv/bin/activate   # Для Linux/macOS
    venv\Scripts\activate      # Для Windows
    ```

3.  **Установите зависимости:**

    ```bash
    pip install -r requirements.txt
    ```

4.  **Настройте базу данных:**

    - Убедитесь, что сервер PostgreSQL запущен.
    - Создайте базу данных `orders_db` и пользователя `orders_user` с паролем `pmr` (или измените эти параметры в файле `orders_project/orders_project/settings.py` и при необходимости в `.env`).
    - Вы можете использовать psql или pgAdmin для создания базы данных и пользователя. Пример создания через psql:

      ```sql
      CREATE DATABASE orders_db;
      CREATE USER orders_user WITH PASSWORD 'pmr';
      GRANT ALL PRIVILEGES ON DATABASE orders_db TO orders_user;
      ```

5.  **Примените миграции Django:**

    ```bash
    python manage.py migrate
    ```

6.  **Запустите сервер разработки Django:**

    ```bash
    python manage.py runserver
    ```

    Приложение будет доступно по адресу `http://127.0.0.1:8000/` или `http://localhost:8000/`.

## Запуск через Docker

### Предварительные требования Docker

Перед запуском проекта с использованием Docker убедитесь, что на вашем компьютере установлено следующее:

- **Docker**: Установите Docker Engine и Docker Compose. Инструкции по установке доступны на [официальном сайте Docker](https://docs.docker.com/get-docker/).

### Инструкция по запуску Docker

1.  **Клонируйте репозиторий:**

    ```bash
    git clone [URL вашего репозитория]
    cd orders_project
    ```

2.  **Запустите проект с помощью Docker Compose:**

    ```bash
    docker-compose up --build
    ```

    Эта команда соберет Docker-образ, если он еще не собран, и запустит контейнеры для базы данных PostgreSQL и веб-приложения Django.

    Приложение будет доступно по адресу `http://localhost:8000/`.

3.  **Остановка Docker контейнеров:**

    Чтобы остановить запущенные контейнеры, в том же терминале, где вы запускали `docker-compose up`, нажмите `Ctrl+C`. Или в другом терминале выполните:

    ```bash
    docker-compose down
    ```

## Использование

После запуска приложения любым из способов, вы можете открыть браузер и перейти по адресу `http://localhost:8000/`. Вы увидите список заказов.

- **Создание заказа:** Нажмите кнопку "Создать заказ" на главной странице, чтобы добавить новый заказ.
- **Просмотр деталей заказа:** Нажмите "Детали" в строке заказа, чтобы увидеть подробную информацию о заказе.
- **Редактирование заказа:** Нажмите "Изменить" в строке заказа, чтобы отредактировать существующий заказ.
- **Удаление заказа:** Нажмите "Удалить" в строке заказа, чтобы удалить заказ.

**Админ-панель Django:**

Админ-панель Django доступна по адресу `http://localhost:8000/admin/`. Вы можете использовать ее для управления пользователями и группами, а также для более детального управления данными приложения. Для входа в админ-панель вам потребуется создать суперпользователя Django:

```bash
python manage.py createsuperuser

## Вклад

Приветствуются любые вклады в проект. Если вы хотите внести изменения, создайте форк репозитория, внесите изменения в своей ветке и отправьте pull request.

## Лицензия

MIT License